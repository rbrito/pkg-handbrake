diff -Naur mpeg4ip/lib/mp4v2/mp4.cpp /Users/pri/t/mpeg4ip/lib/mp4v2/mp4.cpp
--- mpeg4ip/lib/mp4v2/mp4.cpp	2005-03-30 20:41:58.000000000 +0200
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4.cpp	2007-02-09 22:39:28.000000000 +0100
@@ -1678,9 +1678,9 @@
 extern "C" bool MP4GetTrackH264SeqPictHeaders (MP4FileHandle hFile, 
 					       MP4TrackId trackId,
 					       uint8_t ***pSeqHeader,
-					       uint32_t **pSeqHeaderSize,
+					       u_int32_t **pSeqHeaderSize,
 					       uint8_t ***pPictHeader,
-					       uint32_t **pPictHeaderSize)
+					       u_int32_t **pPictHeaderSize)
 {
   if (MP4_IS_VALID_FILE_HANDLE(hFile)) {
     try {
diff -Naur mpeg4ip/lib/mp4v2/mp4.h /Users/pri/t/mpeg4ip/lib/mp4v2/mp4.h
--- mpeg4ip/lib/mp4v2/mp4.h	2005-03-30 20:41:58.000000000 +0200
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4.h	2007-02-09 22:39:42.000000000 +0100
@@ -631,9 +631,9 @@
 
 bool MP4GetTrackVideoMetadata(MP4FileHandle hFile,
 			      MP4TrackId trackId,
-			      uint8_t **ppConfig,
-			      uint32_t *pConfigSize);
-
+			      u_int8_t **ppConfig,
+			      u_int32_t *pConfigSize);
+				  
 bool MP4GetTrackESConfiguration(
 	MP4FileHandle hFile, 
 	MP4TrackId trackId, 
@@ -654,9 +654,9 @@
 bool MP4GetTrackH264SeqPictHeaders(MP4FileHandle hFile,
 				   MP4TrackId trackId,
 				   uint8_t ***pSeqHeaders,
-				   uint32_t **pSeqHeaderSize,
+				   u_int32_t **pSeqHeaderSize,
 				   uint8_t ***pPictHeader,
-				   uint32_t **pPictHeaderSize);
+				   u_int32_t **pPictHeaderSize);
 bool MP4GetTrackH264LengthSize(MP4FileHandle hFile,
 			       MP4TrackId trackId,
 			       uint32_t *pLength);
diff -Naur mpeg4ip/lib/mp4v2/mp4container.cpp /Users/pri/t/mpeg4ip/lib/mp4v2/mp4container.cpp
--- mpeg4ip/lib/mp4v2/mp4container.cpp	2001-11-19 18:06:58.000000000 +0100
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4container.cpp	2007-02-09 22:10:23.000000000 +0100
@@ -207,7 +207,7 @@
 	u_int32_t numProperties = m_pProperties.Size();
 
 	if (numProperties == 0) {
-		WARNING(numProperties == 0);
+		//WARNING(numProperties == 0);
 		return;
 	}
 
diff -Naur mpeg4ip/lib/mp4v2/mp4container.h /Users/pri/t/mpeg4ip/lib/mp4v2/mp4container.h
--- mpeg4ip/lib/mp4v2/mp4container.h	2001-11-19 18:06:58.000000000 +0100
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4container.h	2007-02-09 22:06:42.000000000 +0100
@@ -1,24 +1,3 @@
-/*
- * The contents of this file are subject to the Mozilla Public
- * License Version 1.1 (the "License"); you may not use this file
- * except in compliance with the License. You may obtain a copy of
- * the License at http://www.mozilla.org/MPL/
- * 
- * Software distributed under the License is distributed on an "AS
- * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
- * implied. See the License for the specific language governing
- * rights and limitations under the License.
- * 
- * The Original Code is MPEG4IP.
- * 
- * The Initial Developer of the Original Code is Cisco Systems Inc.
- * Portions created by Cisco Systems Inc. are
- * Copyright (C) Cisco Systems Inc. 2001.  All Rights Reserved.
- * 
- * Contributor(s): 
- *		Dave Mackie		dmackie@cisco.com
- */
-
 #ifndef __MP4_CONTAINER_INCLUDED__
 #define __MP4_CONTAINER_INCLUDED__
 
diff -Naur mpeg4ip/lib/mp4v2/mp4descriptor.cpp /Users/pri/t/mpeg4ip/lib/mp4v2/mp4descriptor.cpp
--- mpeg4ip/lib/mp4v2/mp4descriptor.cpp	2004-02-12 03:06:02.000000000 +0100
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4descriptor.cpp	2007-02-09 22:24:17.000000000 +0100
@@ -149,7 +149,7 @@
 	u_int32_t numProperties = m_pProperties.Size();
 
 	if (numProperties == 0) {
-		WARNING(numProperties == 0);
+		//WARNING(numProperties == 0);
 		return;
 	}
 
@@ -194,7 +194,7 @@
 	u_int32_t numProperties = m_pProperties.Size();
 
 	if (numProperties == 0) {
-		WARNING(numProperties == 0);
+		//WARNING(numProperties == 0);
 		return;
 	}
 	for (u_int32_t i = 0; i < numProperties; i++) {
diff -Naur mpeg4ip/lib/mp4v2/mp4file.cpp /Users/pri/t/mpeg4ip/lib/mp4v2/mp4file.cpp
--- mpeg4ip/lib/mp4v2/mp4file.cpp	2005-03-30 20:41:58.000000000 +0200
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4file.cpp	2007-02-09 22:44:08.000000000 +0100
@@ -1431,7 +1431,7 @@
   return trackId;
 }
 
-MP4TrackId MP4File::AddCntlTrackDefault (uint32_t timeScale,
+MP4TrackId MP4File::AddCntlTrackDefault (u_int32_t timeScale,
 					 MP4Duration sampleDuration,
 					 const char *type)
 {
@@ -1682,7 +1682,7 @@
 			      (MP4Property **)&pLength) == false) ||
       (avcCAtom->FindProperty("avcC.sequenceEntries.sequenceParameterSetNALUnit",
 			      (MP4Property **)&pUnit) == false)) {
-    VERBOSE_ERROR(m_verbosity, WARNING("Could not find avcC properties"));
+    //VERBOSE_ERROR(m_verbosity, WARNING("Could not find avcC properties"));
     return false;
   }
   uint32_t count = pCount->GetValue();
@@ -1692,7 +1692,7 @@
     for (uint32_t index = 0; index < count; index++) {
       if (pLength->GetValue(index) == sequenceLen) {
 	uint8_t *seq;
-	uint32_t seqlen;
+	u_int32_t seqlen;
 	pUnit->GetValue(&seq, &seqlen, index);
 	if (memcmp(seq, pSequence, sequenceLen) == 0) {
 	  free(seq);
@@ -1724,8 +1724,8 @@
 			      (MP4Property **)&pLength) == false) ||
       (avcCAtom->FindProperty("avcC.pictureEntries.pictureParameterSetNALUnit",
 			      (MP4Property **)&pUnit) == false)) {
-    VERBOSE_ERROR(m_verbosity, 
-		  WARNING("Could not find avcC picture table properties"));
+    //VERBOSE_ERROR(m_verbosity, 
+		  //WARNING("Could not find avcC picture table properties"));
     return false;
   }
   uint32_t count = pCount->GetValue();
@@ -1735,7 +1735,7 @@
     for (uint32_t index = 0; index < count; index++) {
       if (pLength->GetValue(index) == pictLen) {
 	uint8_t *seq;
-	uint32_t seqlen;
+	u_int32_t seqlen;
 	pUnit->GetValue(&seq, &seqlen, index);
 	if (memcmp(seq, pPict, pictLen) == 0) {
 	  VERBOSE_WRITE(m_verbosity, 
@@ -2472,9 +2472,9 @@
 
 bool MP4File::GetTrackH264SeqPictHeaders (MP4TrackId trackId,
 					  uint8_t ***pppSeqHeader,
-					  uint32_t **ppSeqHeaderSize,
+					  u_int32_t **ppSeqHeaderSize,
 					  uint8_t ***pppPictHeader,
-					  uint32_t **ppPictHeaderSize)
+					  u_int32_t **ppPictHeaderSize)
 {
   uint32_t count;
 
@@ -2490,15 +2490,15 @@
 			      (MP4Property **)&pSeqLen) == false) ||
       (avcCAtom->FindProperty("avcC.sequenceEntries.sequenceParameterSetNALUnit",
 			      (MP4Property **)&pSeqVal) == false)) {
-    VERBOSE_ERROR(m_verbosity, WARNING("Could not find avcC properties"));
+    //VERBOSE_ERROR(m_verbosity, WARNING("Could not find avcC properties"));
     return false;
   }
   uint8_t **ppSeqHeader =
     (uint8_t **)malloc((pSeqCount->GetValue() + 1) * sizeof(uint8_t *));
   *pppSeqHeader = ppSeqHeader;
 
-  uint32_t *pSeqHeaderSize = 
-    (uint32_t *)malloc((pSeqCount->GetValue() + 1) * sizeof(uint32_t *));
+  u_int32_t *pSeqHeaderSize = 
+    (u_int32_t *)malloc((pSeqCount->GetValue() + 1) * sizeof(u_int32_t *));
 
   *ppSeqHeaderSize = pSeqHeaderSize;
   for (count = 0; count < pSeqCount->GetValue(); count++) {
@@ -2513,15 +2513,15 @@
 			      (MP4Property **)&pPictLen) == false) ||
       (avcCAtom->FindProperty("avcC.pictureEntries.pictureParameterSetNALUnit",
 			      (MP4Property **)&pPictVal) == false)) {
-    VERBOSE_ERROR(m_verbosity, 
-		  WARNING("Could not find avcC picture table properties"));
+    //VERBOSE_ERROR(m_verbosity, 
+		  //WARNING("Could not find avcC picture table properties"));
     return false;
   }
   uint8_t 
   **ppPictHeader = 
     (uint8_t **)malloc((pPictCount->GetValue() + 1) * sizeof(uint8_t *));
-  uint32_t *pPictHeaderSize = 
-    (uint32_t *)malloc((pPictCount->GetValue() + 1)* sizeof(uint32_t *));
+  u_int32_t *pPictHeaderSize = 
+    (u_int32_t *)malloc((pPictCount->GetValue() + 1)* sizeof(u_int32_t *));
   *pppPictHeader = ppPictHeader;
   *ppPictHeaderSize = pPictHeaderSize;
 
diff -Naur mpeg4ip/lib/mp4v2/mp4file.h /Users/pri/t/mpeg4ip/lib/mp4v2/mp4file.h
--- mpeg4ip/lib/mp4v2/mp4file.h	2005-03-30 20:41:58.000000000 +0200
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4file.h	2007-02-09 22:35:21.000000000 +0100
@@ -329,9 +329,9 @@
 				      uint8_t *pLevel);
 	bool GetTrackH264SeqPictHeaders(MP4TrackId trackId, 
 					uint8_t ***pSeqHeader,
-					uint32_t **pSeqHeaderSize,
+					u_int32_t **pSeqHeaderSize,
 					uint8_t ***pPictHeader,
-					uint32_t **pPictHeaderSize);
+					u_int32_t **pPictHeaderSize);
 	void GetTrackH264LengthSize(MP4TrackId, 
 				    uint32_t *pLength);
 	const char* GetHintTrackSdp(MP4TrackId hintTrackId);
diff -Naur mpeg4ip/lib/mp4v2/mp4file_io.cpp /Users/pri/t/mpeg4ip/lib/mp4v2/mp4file_io.cpp
--- mpeg4ip/lib/mp4v2/mp4file_io.cpp	2004-07-15 20:09:48.000000000 +0200
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4file_io.cpp	2007-02-09 22:44:47.000000000 +0100
@@ -86,7 +86,7 @@
 	}
 
 	ASSERT(pBytes);
-	WARNING(m_numReadBits > 0);
+	//WARNING(m_numReadBits > 0);
 
 	if (pFile == NULL) {
 		pFile = m_pFile;
diff -Naur mpeg4ip/lib/mp4v2/mp4property.cpp /Users/pri/t/mpeg4ip/lib/mp4v2/mp4property.cpp
--- mpeg4ip/lib/mp4v2/mp4property.cpp	2004-08-23 20:28:21.000000000 +0200
+++ /Users/pri/t/mpeg4ip/lib/mp4v2/mp4property.cpp	2007-02-09 22:47:04.000000000 +0100
@@ -636,7 +636,7 @@
 	u_int32_t numProperties = m_pProperties.Size();
 
 	if (numProperties == 0) {
-		WARNING(numProperties == 0);
+		//WARNING(numProperties == 0);
 		return;
 	}
 
@@ -670,7 +670,7 @@
 	u_int32_t numProperties = m_pProperties.Size();
 
 	if (numProperties == 0) {
-		WARNING(numProperties == 0);
+		//WARNING(numProperties == 0);
 		return;
 	}
 
@@ -709,7 +709,7 @@
 	u_int32_t numProperties = m_pProperties.Size();
 
 	if (numProperties == 0) {
-		WARNING(numProperties == 0);
+		//WARNING(numProperties == 0);
 		return;
 	}
 
